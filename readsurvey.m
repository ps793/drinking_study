function data = readsurvey( filename )
%% Import data from text file.
% Script for importing data from the following text file:
%
%    E:\software\matlab2015a\MATLAB\new pipeline\1005.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2015/10/28 15:48:07

%% Initialize variables.
%% Import data from text file.
% Script for importing data from the following text file:
%
%    E:\software\matlab2015a\MATLAB\new pipeline\1005.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2015/10/28 15:50:53

%% Initialize variables.
%filename = 'C:\Users\pp\Desktop\new data\survey\1007.csv';
%filename='1037.csv'
delimiter = ',';
startRow = 2;

%% Read columns of data as strings:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric strings to numbers.
% Replace non-numeric strings with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = dataArray{col};
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,2,3]
    % Converts strings in the input cell array to numbers. Replaced non-numeric
    % strings with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1);
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData{row}, regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if any(numbers==',');
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(thousandsRegExp, ',', 'once'));
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric strings to numbers.
            if ~invalidThousandsSeparator;
                numbers = textscan(strrep(numbers, ',', ''), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch me
        end
    end
end

dateFormatIndex = 1;
blankDates = cell(1,size(raw,2));
anyBlankDates = false(size(raw,1),1);
invalidDates = cell(1,size(raw,2));
anyInvalidDates = false(size(raw,1),1);
for col=[5,10]% Convert the contents of columns with dates to MATLAB datetimes using date format string.
    try
        dates{col} = datetime(dataArray{col}, 'Format', 'MM/dd/yy HH:mm:ss', 'InputFormat', 'MM/dd/yy HH:mm:ss'); %#ok<SAGROW>
    catch
        try
            % Handle dates surrounded by quotes
            dataArray{col} = cellfun(@(x) x(2:end-1), dataArray{col}, 'UniformOutput', false);
            dates{col} = datetime(dataArray{col}, 'Format', 'MM/dd/yy HH:mm:ss', 'InputFormat', 'MM/dd/yy HH:mm:ss'); %%#ok<SAGROW>
        catch
            dates{col} = repmat(datetime([NaN NaN NaN]), size(dataArray{col})); %#ok<SAGROW>
        end
    end
    
    dateFormatIndex = dateFormatIndex + 1;
    blankDates{col} = cellfun(@isempty, dataArray{col});
    anyBlankDates = blankDates{col} | anyBlankDates;
    invalidDates{col} = isnan(dates{col}.Hour) - blankDates{col};
    anyInvalidDates = invalidDates{col} | anyInvalidDates;
end
dates = dates(:,[5,10]);
blankDates = blankDates(:,[5,10]);
invalidDates = invalidDates(:,[5,10]);

%% Split data into numeric and cell columns.
rawNumericColumns = raw(:, [1,2,3]);
rawCellColumns = raw(:, [4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191]);


%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),rawNumericColumns); % Find non-numeric cells
rawNumericColumns(R) = {NaN}; % Replace non-numeric cells

for i=1:length(rawNumericColumns(:, 1))
    string_list{i,1}=num2str(cell2mat(rawNumericColumns(i, 1)));
    
end;

%% Create output variable
data = table;
data.ID = string_list;
data.StudayDay = cell2mat(rawNumericColumns(:, 2));
data.Type = cell2mat(rawNumericColumns(:, 3));
data.Type1 = rawCellColumns(:, 1);
data.ScheculedTS = dates{:, 1};
data.Reminder1 = rawCellColumns(:, 2);
data.Reminder2 = rawCellColumns(:, 3);
data.Reminder3 = rawCellColumns(:, 4);
data.StartTS = rawCellColumns(:, 5);
data.EndTS = dates{:, 2};
data.Afraid = rawCellColumns(:, 6);
data.Ashamed = rawCellColumns(:, 7);
data.Distressed = rawCellColumns(:, 8);
data.Hostile = rawCellColumns(:, 9);
data.Irritable = rawCellColumns(:, 10);
data.Jittery = rawCellColumns(:, 11);
data.Nervous = rawCellColumns(:, 12);
data.Scared = rawCellColumns(:, 13);
data.Upset = rawCellColumns(:, 14);
data.Frightened = rawCellColumns(:, 15);
data.Shaky = rawCellColumns(:, 16);
data.Angry = rawCellColumns(:, 17);
data.Scornful = rawCellColumns(:, 18);
data.Disgusted = rawCellColumns(:, 19);
data.Loathing = rawCellColumns(:, 20);
data.Sad = rawCellColumns(:, 21);
data.Blue = rawCellColumns(:, 22);
data.Downhearted = rawCellColumns(:, 23);
data.Alone = rawCellColumns(:, 24);
data.Lonely = rawCellColumns(:, 25);
data.Active = rawCellColumns(:, 26);
data.Alert = rawCellColumns(:, 27);
data.Attentive = rawCellColumns(:, 28);
data.Determined = rawCellColumns(:, 29);
data.Enthusiastic = rawCellColumns(:, 30);
data.Excited = rawCellColumns(:, 31);
data.Inspired = rawCellColumns(:, 32);
data.Interested = rawCellColumns(:, 33);
data.Proud = rawCellColumns(:, 34);
data.Strong = rawCellColumns(:, 35);
data.Guilty = rawCellColumns(:, 36);
data.Ifeltandactedonastrongimpulse = rawCellColumns(:, 37);
data.Ididsomethingwithoutreallythinkingitthrough = rawCellColumns(:, 38);
data.Igaveupeasily = rawCellColumns(:, 39);
data.Ididsomethingforthethrillofit = rawCellColumns(:, 40);
data.DidyouDRINKALCOHOLlastnight = rawCellColumns(:, 41);
data.HOWMANYALCOHOLICDRINKSdidyouhave = rawCellColumns(:, 42);
data.DoyouhaveaHANGOVERfromlastnightsdrinking = rawCellColumns(:, 43);
data.HaveyouSMOKEDaCIGARETTEsinceWAKEUP = rawCellColumns(:, 44);
data.HOWMANYCIGARETTESdidyousmokesinceWAKEUP = rawCellColumns(:, 45);
data.ISMOKEDbecauseitwouldreducemycraving = rawCellColumns(:, 46);
data.ISMOKEDbecauseIwouldsoonbegoingsomeplaceswhereIcantsmoke = rawCellColumns(:, 47);
data.ISMOKEDbecauseitwouldhelpmecopewithnegativefeelingsIhave = rawCellColumns(:, 48);
data.ISMOKEDbecauseitwouldmakemypositivefeelingsevenbettermakemehapp = rawCellColumns(:, 49);
data.ISMOKEDbecauseitisahabitandalmostautomatic = rawCellColumns(:, 50);
data.ISMOKEDbecauseitwouldbeanopportunitytosocializewithothers = rawCellColumns(:, 51);
data.ISMOKEDbecauseititwouldbeabreakfromworkingorfromstudying = rawCellColumns(:, 52);
data.ISMOKEDbecauseitIwasboredandwantedtokilltime = rawCellColumns(:, 53);
data.TheCIGARETTEwasPLEASUREABLE = rawCellColumns(:, 54);
data.TheCIGARETTERELIEVEDUNPLEASANTFEELINGSORSYMPTOMS = rawCellColumns(:, 55);
data.TheCIGARETTEMADEMEFEELWORSE = rawCellColumns(:, 56);
data.Inthepast15minutesdidyouCRAVEaDRINK = rawCellColumns(:, 57);
data.Inthepast15minutesdidyouCRAVEaCIGARETTE = rawCellColumns(:, 58);
data.Inthepast15minutesdidyoufeelSLUGGISH = rawCellColumns(:, 59);
data.Inthepast15minutesdidyoufeelBUZZED = rawCellColumns(:, 60);
data.Inthepast15minutesdidyoufeelDIZZY = rawCellColumns(:, 61);
data.Inthepast15minuteshaveyouhadaHEADACHE = rawCellColumns(:, 62);
data.Inthepast15minuteshaveyoufeltNAUSEOUS = rawCellColumns(:, 63);
data.Inthepast15minutesWHOhaveyoubeenwithNoone = rawCellColumns(:, 64);
data.Parenterspouse = rawCellColumns(:, 65);
data.Otherfamilymember = rawCellColumns(:, 66);
data.Friendacquaintance = rawCellColumns(:, 67);
data.Other = rawCellColumns(:, 68);
data.Inthepast15minutesWHEREisyourlocationHome = rawCellColumns(:, 69);
data.Work = rawCellColumns(:, 70);
data.Barrestaurant = rawCellColumns(:, 71);
data.Outside = rawCellColumns(:, 72);
data.Otherpublicplace = rawCellColumns(:, 73);
data.Other1 = rawCellColumns(:, 74);
data.WhendidyoufinishyourfirstDRINK = rawCellColumns(:, 75);
data.HOWMANYDRINKSdidyouconsumeSINCETHEFIRSTDRINK = rawCellColumns(:, 76);
data.HaveyouSMOKEDACIGARETTEinthePAST15MINUTES = rawCellColumns(:, 77);
data.HOWMANYCIGARETTESdidyousmokeinthePAST15MINUTES = rawCellColumns(:, 78);
data.Idrankalcoholbecauseitwouldmakeiteasiertobearoundotherpeople = rawCellColumns(:, 79);
data.Idrankalcoholbecauseitwouldmakemefeelmorerelaxedorcalm = rawCellColumns(:, 80);
data.Idrankalcoholbecauseitwouldmakememorecourageousordaring = rawCellColumns(:, 81);
data.Idrankalcoholbecauseitwouldmakemefeelsensualorsexier = rawCellColumns(:, 82);
data.Idrankalcoholbecauseitwouldmakeithardertothinkorperformatask = rawCellColumns(:, 83);
data.Idrankalcoholbecauseitwouldmakememoreaggressiveandtough = rawCellColumns(:, 84);
data.Idrankalcoholbecauseitwouldmakemefeelguiltyordepressed = rawCellColumns(:, 85);
data.TheDRINKwasPLEASUREABLE = rawCellColumns(:, 86);
data.TheDRINKRELIEVEDUNPLEASANTFEELINGSORSYMPTOMS = rawCellColumns(:, 87);
data.TheDRINKMADEMEFEELWORSE = rawCellColumns(:, 88);
data.Howmuchdidyourmoodchange = rawCellColumns(:, 89);
data.Areyouinabetterorworsemoodnowthanbefore = rawCellColumns(:, 90);
data.IfbetterWHATTRIGGEREDyourmoodchangeReceivedgoodnews = rawCellColumns(:, 91);
data.Someonecomplimentedme = rawCellColumns(:, 92);
data.Usedalcohol = rawCellColumns(:, 93);
data.Useddrugs = rawCellColumns(:, 94);
data.Usedprescribedmedications = rawCellColumns(:, 95);
data.Hadsex = rawCellColumns(:, 96);
data.Spenttimewithsomeoneclosetome = rawCellColumns(:, 97);
data.Hadanicedayorevening = rawCellColumns(:, 98);
data.Exercised = rawCellColumns(:, 99);
data.IdidsomethingIamproudof = rawCellColumns(:, 100);
data.Feltacceptedandsupportedbysomeone = rawCellColumns(:, 101);
data.Other2 = rawCellColumns(:, 102);
data.Therewerenotriggers = rawCellColumns(:, 103);
data.IfworseWHATTRIGGEREDyourmoodchangeLackofsleep = rawCellColumns(:, 104);
data.Argumentorconflict = rawCellColumns(:, 105);
data.Usedalcohol1 = rawCellColumns(:, 106);
data.Useddrugs1 = rawCellColumns(:, 107);
data.Usedprescribedmedications1 = rawCellColumns(:, 108);
data.Problematworkorschool = rawCellColumns(:, 109);
data.Stress = rawCellColumns(:, 110);
data.Painorbodiydiscomfort = rawCellColumns(:, 111);
data.Receivedbadnews = rawCellColumns(:, 112);
data.Upsetmadatself = rawCellColumns(:, 113);
data.Feltrejectedbysomeone = rawCellColumns(:, 114);
data.Other3 = rawCellColumns(:, 115);
data.THEREWERENOTRIGGERS = rawCellColumns(:, 116);
data.DoyouCRAVEADRINKrightnow = rawCellColumns(:, 117);
data.DoyouCRAVEACIGARETTErightnow = rawCellColumns(:, 118);
data.HowmuchdoyouCRAVEADRINKrightnow = rawCellColumns(:, 119);
data.Howlikelydoyouthinkitisthatyouwilldrinkalcoholsoon = rawCellColumns(:, 120);
data.WhatTRIGGEREDyourcravingforalcoholNearabarorliquorstore = rawCellColumns(:, 121);
data.Sawothersdrinking = rawCellColumns(:, 122);
data.Feltsadortenseorangry = rawCellColumns(:, 123);
data.Wasofferedadrink = rawCellColumns(:, 124);
data.Feltgoodorhappy = rawCellColumns(:, 125);
data.Other4 = rawCellColumns(:, 126);
data.Therewerenotriggers1 = rawCellColumns(:, 127);
data.HaveyouCONSUMEDALCOHOLsincethelastsurveyyouanswered = rawCellColumns(:, 128);
data.HOWMANYDRINKSdidyouconsumeSINCEthelastsurveyyouanswered = rawCellColumns(:, 129);
data.HaveyouSMOKEDACIGARETTEinthePAST15MINUTES1 = rawCellColumns(:, 130);
data.HOWMANYCIGARETTESdidyousmokeinthePAST15MINUTES1 = rawCellColumns(:, 131);
data.SincethelastprompthaveyouhadadisagreementRomanticpartner = rawCellColumns(:, 132);
data.Bossteacher = rawCellColumns(:, 133);
data.Coworker = rawCellColumns(:, 134);
data.Sibling = rawCellColumns(:, 135);
data.Friend = rawCellColumns(:, 136);
data.Parent = rawCellColumns(:, 137);
data.Roommate = rawCellColumns(:, 138);
data.Otherfamilymember1 = rawCellColumns(:, 139);
data.THEREWASNOSUCHINCIDENTFEELING = rawCellColumns(:, 140);
data.SincethelastprompthaveyoufeltrejectedRomanticpartner = rawCellColumns(:, 141);
data.Bossteacher1 = rawCellColumns(:, 142);
data.Coworker1 = rawCellColumns(:, 143);
data.Sibling1 = rawCellColumns(:, 144);
data.Friend1 = rawCellColumns(:, 145);
data.Parent1 = rawCellColumns(:, 146);
data.Roommate1 = rawCellColumns(:, 147);
data.Otherfamilymember2 = rawCellColumns(:, 148);
data.THEREWASNOSUCHINCIDENTFEELING1 = rawCellColumns(:, 149);
data.SincethelastprompthaveyoufeltcomplimentedorpraisedRomanticpartn = rawCellColumns(:, 150);
data.Bossteacher2 = rawCellColumns(:, 151);
data.Coworker2 = rawCellColumns(:, 152);
data.Sibling2 = rawCellColumns(:, 153);
data.Friend2 = rawCellColumns(:, 154);
data.Parent2 = rawCellColumns(:, 155);
data.Roommate2 = rawCellColumns(:, 156);
data.Otherfamilymember3 = rawCellColumns(:, 157);
data.THEREWASNOSUCHINCIDENTFEELING2 = rawCellColumns(:, 158);
data.SincethelastprompthaveyoufeltletdownbysomeoneyoudependonRomanti = rawCellColumns(:, 159);
data.Bossteacher3 = rawCellColumns(:, 160);
data.Coworker3 = rawCellColumns(:, 161);
data.Sibling3 = rawCellColumns(:, 162);
data.Friend3 = rawCellColumns(:, 163);
data.Parent3 = rawCellColumns(:, 164);
data.Roommate3 = rawCellColumns(:, 165);
data.Otherfamilymember4 = rawCellColumns(:, 166);
data.THEREWASNOSUCHINCIDENTFEELING3 = rawCellColumns(:, 167);
data.Sincethelastprompthaveyouexperiencedaloss = rawCellColumns(:, 168);
data.SincethelastprompthaveyouReceivedbadgoodnews = rawCellColumns(:, 169);
data.Sincethelastprompthaveyouslept = rawCellColumns(:, 170);
data.HowmanyHours = rawCellColumns(:, 171);
data.Sincethelastprompthaveyouusedcaffeine = rawCellColumns(:, 172);
data.HowmanyCups = rawCellColumns(:, 173);
data.SincethelastprompthaveyouusedoverthecountermedicationsIFYESLOGM = rawCellColumns(:, 174);
data.Sincethelastprompthaveyoutakenyourmedicationsasprescribedifnolo = rawCellColumns(:, 175);
data.HOWMANYDRINKSdidyouconsumeSINCETHELASTRECORDING = rawCellColumns(:, 176);
data.HaveyouSMOKEDACIGARETTEsinceTHELASTRECORDING = rawCellColumns(:, 177);
data.HOWMANYCIGARETTESdidyousmokesinceTHELASTRECORDING = rawCellColumns(:, 178);
data.Doyouplanondrinkingtodayortonight = rawCellColumns(:, 179);
data.Positive = rawCellColumns(:, 180);
data.Negative = rawCellColumns(:, 181);
data.Fear = rawCellColumns(:, 182);
data.Hostility = rawCellColumns(:, 183);
data.Sadness = rawCellColumns(:, 184);
data.Week = rawCellColumns(:, 185);
data.WhendidyoufinishyourfirstDRINK1 = rawCellColumns(:, 186);

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% data.ScheculedTS=datenum(data.ScheculedTS);
% data.EndTS=datenum(data.EndTS);

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans raw col numericData rawData row regexstr result numbers invalidThousandsSeparator thousandsRegExp me dateFormatIndex dates blankDates anyBlankDates invalidDates anyInvalidDates rawNumericColumns rawCellColumns R;




end

